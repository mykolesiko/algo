"""
https://codeforces.com/group/zJTwakJcKM/contest/299322/problem/B
B. „ерепаха и монеты
ограничение по времени на тест2 секунды
ограничение по пам€ти на тест256 мегабайт
вводстандартный ввод
выводстандартный вывод
„ерепаха хочет переползти из левого верхнего угла пол€ размером n на m клеток (2 <= n,m <= 1000) в правый нижний. «а один шаг она может переместитьс€ на соседнюю клетку вправо или на соседнюю клетку вниз.  роме того, проход€ через каждую клетку, „ерепаха получает (или тер€ет) несколько золотых монет (это число известно дл€ каждой клетки).

ќпределите, какое максимальное количество монет может собрать „ерепаха по пути и как ей нужно идти дл€ этого.

¬ходные данные
¬ первой строке ввод€тс€ два натуральных числа: n и m (2?n,m?1000), разделЄнные пробелом. ¬ каждой из следующих n строк записаны через пробел по m чисел aij(|aij|?10), которые обозначают количество монет, получаемых „ерепашкой при проходе через каждую клетку. ≈сли это число отрицательное, „ерепашка тер€ет монеты.

¬ыходные данные
¬ первой строке программа должна вывести наибольшее количество монет, которое может собрать „ерепаха. ¬о второй строке без пробелов вывод€тс€ команды, которые нужно выполнить „ерепахе: буква 'R' (от слова right) обозначает шаг вправо, а буква 'D' (от слова down) Ч шаг вниз.

"""
# -*- coding: utf-8 -*-
"""
Created on Thu Oct 22 20:38:17 2020

@author: Asus
"""

n_a = int(input())
a = list(map(int, input().split()))
max_subseq_len = []
max_subseq_len.append(1)
subseq = []
subseq.append([0])
max_all = 1
index_max_all = 0
for i in range(1, n_a):
    temp_max_len = 1
    jmax = -1
    for j in range(i):
        if (a[j] < a[i]) & (temp_max_len < max_subseq_len[j] + 1):
            jmax = j
            temp_max_len = max_subseq_len[j] + 1
    if jmax == -1:
        max_subseq_len.append(1)
        subseq.append([i])
    else:
        max_subseq_len.append(temp_max_len)
        subseq.append(subseq[jmax].copy())
        subseq[-1].append(i)
    if max_subseq_len[-1] > max_all:
        max_all = max_subseq_len[-1]
        index_max_all = i
print(max_all)
print(" ".join(list(map(lambda i: str(a[i]), subseq[index_max_all]))))
